Movimentos do Spider Man e da teia:
1- Disparar: carregar no espaço e depois nas teclas up, left ou right
Em left ou em right a teia é disparada a 45 graus (https://prnt.sc/w2eg60)
2- Lançar-se: se tiver usado a teia na diagonal o spider man começa automaticamente a mover-se como um pendulo. Não dá para controlar a direção.
Os pontos mais altos ficam onde a teia fizer 45 graus
3- Puxar: Carregando em up ou down a teia encolhe-se ou extende-se (de forma rígida).
Há um limite para o comprimento da teia (o mesmo do alcance de quando a dispara).
Se se puxar/esticar a teia a meio do movimento horizontal, este não é interrompido. A teia aumenta ou diminui simultaneamente.

OI eixo do y e negtivo

Variável de atirar teia ou nao (ativada na tecla de space)
guardar posicao inicial da teia(com o jogador)
teia= distancia no x, distancia no y, direcao :left right, up
A cada ciclo aaumenta-se a teia na direcao certa 0.001 nos dois eixos

edificoi
matriz em que será 1 se tiver parede, 0 se nao[1111100011111000011100000
vai ter que ser necessariamente muito grajnde


1- desenhar jogador e dar-lhe ,movimento na horizontal
2- desenhar o edificio
so depois a teia


Ideia para teia
import pygame

SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
pygame.init()
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
color = pygame.Color('white')
pygame.draw.line(screen, color, (60,80),(130,100))
pygame.display.flip()

pygame.quit()

Gerral

def turn_false:
    if x == "yes"
import pygame

SC_WIDTH = 800
SC_HEIGHT = 600
left_mov = False
right_mov = False
up_mov = False
down_mov = False
up_key = False
down_key = False
right_key = False
left_key = False
space_key = False

pygame.init()
screen = pygame.display.set_mode((SC_WIDTH, SC_HEIGHT))
pygame.display.set_caption('Spider Man Atari 2600')
clock = pygame.time.Clock()
spiderman = pygame.image.load('images/spiderman.png')

x = SC_WIDTH/2 + spiderman.get_width()/2
y = SC_HEIGHT/2 + spiderman.get_height()/2

running = True

web_up = False
web_left = False
web_right = False
web_distance = 0

while running:
    

    
    for ev in pygame.event.get():
        if ev.type == pygame.QUIT:
            running = False
        elif ev.type == pygame.KEYDOWN:
            if ev.key == pygame.K_ESCAPE:
                running = False
            if ev.key == pygame.K_LEFT:
                left_key = True
            if ev.key == pygame.K_RIGHT:
                right_key = True
            if ev.key == pygame.K_UP:
                up_key = True
            if ev.key == pygame.K_DOWN:
                down_key = True
            if ev.key == pygame.K_SPACE:
                space_key = True
            
#Velocidade
    if space_key and up_key:
        web_up = True
    elif space_key and right_key:
        turn_false = (web_up,web_left)
        web_right = True
    elif space_key and left_key:
        web_left = True
    elif up_key:
        up_mov = True
    elif down_key:
        down_mov = True
    elif right_key:
        right_mov = True
    elif left_key:
        left_mov = True


    v = 3
    v_x = 0
    v_y = 0
    dt = clock.tick()
    if up_mov:
        v_y = -v * dt
    if left_mov:
        v_x = -v * dt
    if down_mov:
        v_y = v * dt
    if right_mov:
        v_x = v * dt
        
#Posição        
    x = x + v_x
    y = y + v_y

    screen.fill("black")
    screen.blit(spiderman, (x - int(spiderman.get_width()/2), y - int(spiderman.get_width()/2)))
    if web_up:
        web_distance = 10               
        anchor = (x-29, y -40- web_distance)
        pygame.draw.line(screen,(255,255,255),(x-29,y-40),anchor,5)
        pygame.display.flip()
    else:
        web_distance = 0
    
    if web_right:
        web_distance = 10               
        anchor = (x-29 + web_distance, y -40- web_distance)
        pygame.draw.line(screen,(255,255,255),(x-29,y-40),anchor,5)
        pygame.display.flip()
    else:
        web_distance = 0
    
    if web_left:
        web_distance = 10               
        anchor = (x-29-web_distance, y -40- web_distance)
        pygame.draw.line(screen,(255,255,255),(x-29,y-40),anchor,5)
        pygame.display.flip()
    else:
        web_distance = 0

    left_mov = False
    right_mov = False
    up_mov = False
    down_mov = False
    up_key = False
    down_key = False
    right_key = False
    left_key = False
    space_key = False
    
    pygame.display.flip()
pygame.quit()
