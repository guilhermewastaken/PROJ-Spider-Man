Movimentos do Spider Man e da teia:
1- Disparar: carregar no espaço e depois nas teclas up, left ou right
Em left ou em right a teia é disparada a 45 graus (https://prnt.sc/w2eg60)
2- Lançar-se: se tiver usado a teia na diagonal o spider man começa automaticamente a mover-se como um pendulo. Não dá para controlar a direção.
Os pontos mais altos ficam onde a teia fizer 45 graus
3- Puxar: Carregando em up ou down a teia encolhe-se ou extende-se (de forma rígida).
Há um limite para o comprimento da teia (o mesmo do alcance de quando a dispara).
Se se puxar/esticar a teia a meio do movimento horizontal, este não é interrompido. A teia aumenta ou diminui simultaneamente.

OI eixo do y e negtivo

Variável de atirar teia ou nao (ativada na tecla de space)
guardar posicao inicial da teia(com o jogador)
teia= distancia no x, distancia no y, direcao :left right, up
A cada ciclo aaumenta-se a teia na direcao certa 0.001 nos dois eixos

edificoi
matriz em que será 1 se tiver parede, 0 se nao[1111100011111000011100000
vai ter que ser necessariamente muito grajnde


1- desenhar jogador e dar-lhe ,movimento na horizontal
2- desenhar o edificio
so depois a teia


Ideia para teia
import pygame

SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
pygame.init()
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
color = pygame.Color('white')
pygame.draw.line(screen, color, (60,80),(130,100))
pygame.display.flip()

pygame.quit()

Gerral

import pygame
import math
pygame.init()
running = True

#Background and window
screen_width = 800
screen_heigth = 600
screen = pygame.display.set_mode((screen_width, screen_heigth))
pygame.display.set_caption('Spider Man Atari 2600')

#Spiderman
spiderman = pygame.image.load('Images/spiderman.png')
x = screen_width/2 + spiderman.get_width()/2
y = screen_heigth/2 + spiderman.get_height()/2
web_shooting = False
web_active = False
web_first_shot = True
shot_up = False
shot_right = False
shot_left = False

up_key = False
down_key = False
right_key = False
left_key = False

y_direction = -1

while running:
    for ev in pygame.event.get():
        if ev.type == pygame.QUIT:
            running = False
        
        elif ev.type == pygame.KEYDOWN:
            if ev.key == pygame.K_ESCAPE:
                running = False
                
            if ev.key == pygame.K_SPACE:
                web_shooting = True
            if ev.key == pygame.K_LEFT:
                left_key = True
            if ev.key == pygame.K_RIGHT:
                right_key = True
            if ev.key == pygame.K_UP:
                up_key = True
            if ev.key == pygame.K_DOWN:
                down_key = True
        
        elif ev.type == pygame.KEYUP:
            if ev.key == pygame.K_SPACE:
                web_shooting = False
                web_active = True                
            if ev.key == pygame.K_LEFT:
                left_key = False
            if ev.key == pygame.K_RIGHT:
                right_key = False
            if ev.key == pygame.K_UP:
                up_key = False
            if ev.key == pygame.K_DOWN:
                down_key = False
                
#Disparo da teia    
    if web_shooting:
        if web_first_shot:
            anchor = (x-29,y-40)
            web_distance = 0
            if up_key:
                shot_up = True
                web_first_shot = False
            if right_key:
                shot_right = True
                web_first_shot = False
            if left_key:
                shot_left = True
                web_first_shot = False        
        if up_key and shot_up:
            web_distance += 1               
            anchor = (x-29, y -40- web_distance)
        if right_key and shot_right:
            direction = 1
            web_distance += 1               
            anchor = (x-29 + web_distance, y -40- web_distance)
        if left_key and shot_left:
            direction = -1
            web_distance += 1               
            anchor = (x-29-web_distance, y -40- web_distance)        
        if web_distance > 150:
            web_distance = 150
        first_swing = True
        
#Movimento    
    if web_active:
        #Swing
        if not shot_up:
            swing_x = abs(origin[0]-anchor[0])
            swing_y = math.sqrt(web_distance**2-swing_x**2)
            if swing_x == swing_y:
                if first_swing:
                    first_swing = False
                else:
                    direction = direction * (-1)
            if swing_x == 0:
                y_direction * (-1)
            if direction == 1:
                swing_x += 1
                x += 1
            elif direction == -1:
                swing_x -= 1
                x -= 1
            updated_swing_y = math.sqrt(web_distance**2-swing_x**2)
            if y_direction == -1:
                y -= swing_y - updated_swing_y
            elif y_direction == 1:
                y += swing_y - updated_swing_y
        
        #Movement
        if origin == anchor:
            web_active = False
        if shot_up:
            if up_key:
                y -= 1                
            elif down_key:
                y += 1
        # else:
        #     if up_key:
                
        #     elif down_key
            
        if origin == anchor:
            web_active = False
    #     if up_key:
        
    #     elif down_key



    screen.fill("black")
    if web_active or web_shooting:
        origin = (x-29,y-40)
        pygame.draw.line(screen,(255,255,255),origin,anchor,5)
    screen.blit(spiderman, (x - int(spiderman.get_width()/2), y - int(spiderman.get_width()/2)))
    pygame.display.flip()
pygame.quit()
